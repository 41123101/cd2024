<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>4123101協同產品設計實習</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2024-04-12T07:47:06+08:00</updated><entry><title>2024 Spring 課程</title><link href="./2024-Spring-w6.html" rel="alternate"></link><published>2024-03-29T04:54:00+08:00</published><updated>2024-03-29T07:50:37+08:00</updated><author><name>41123101</name></author><id>tag:None,2024-03-29:./2024-Spring-w6.html</id><summary type="html">&lt;p&gt;update群組&lt;/p&gt;
</summary><content type="html">&lt;p&gt;update群組&lt;/p&gt;

&lt;h1&gt;觀看2a_w6影片&lt;/h1&gt;
&lt;p&gt;將github中的內容合併至分組網站&lt;/p&gt;</content><category term="w6"></category><category term="合併網誌"></category></entry><entry><title>2024 Spring 課程</title><link href="./2024-Spring-w5.html" rel="alternate"></link><published>2024-03-22T04:54:00+08:00</published><updated>2024-04-12T06:53:22+08:00</updated><author><name>41123101</name></author><id>tag:None,2024-03-22:./2024-Spring-w5.html</id><summary type="html">&lt;p&gt;update群組&lt;/p&gt;
</summary><content type="html">&lt;p&gt;update群組&lt;/p&gt;

&lt;h1&gt;將組員的個人倉儲納為分組倉儲的子模組&lt;/h1&gt;
&lt;p&gt;觀看老師blog中的影片，成功將個人倉儲納為分組倉儲的子模組&lt;/p&gt;
&lt;h1&gt;分工處理teams上資料&lt;/h1&gt;
&lt;p&gt;P.1-20 葉承軒 P.21-31 黃育驊 P.32-42 樊明睿 P.43-53 張晏菖 P.54-64 顏崇祐 P.65-75 邱崑展 P.76-87 段勝吉 統整 田芸熏&lt;/p&gt;</content><category term="w5"></category><category term="影片上字幕"></category><category term="影片逐字稿"></category></entry><entry><title>2024 Spring 課程</title><link href="./2024-Spring-w4.html" rel="alternate"></link><published>2024-03-15T04:54:00+08:00</published><updated>2024-04-12T07:47:06+08:00</updated><author><name>41123101</name></author><id>tag:None,2024-03-15:./2024-Spring-w4.html</id><summary type="html">&lt;p&gt;教學影片分組整理並自評&lt;/p&gt;
</summary><content type="html">&lt;p&gt;教學影片分組整理並自評&lt;/p&gt;

&lt;h1&gt;上課影片上字幕&lt;/h1&gt;
&lt;p&gt;負責cd2024_2a_w2_5 如何利用近端可攜環境與外部 IPv4 開啟動態網站
第一組負責
41123101的https://youtu.be/qPq1U-2bNqI
41123120的 https://youtu.be/LQYp4i-ejO8
41123140的https://youtu.be/miV6obGSg50
41123146的https://youtu.be/1cFpoc6meWE
41123150的https://youtu.be/gX0EsoWg1NM
41136113的https://youtu.be/PMzTNIgzcKE
41136123的https://youtu.be/6pfflA59g3c&lt;/p&gt;
&lt;h1&gt;cd2024_2a_w2_5 逐字稿&lt;/h1&gt;
&lt;p&gt;剛才啊。因為剛才雖然這個。第一組組長，他的系統已經全部登出了對不對？但是剛才的我的private key還在嗎？
我們就用一下。所以我們現在想要知道他目前的分組倉儲到所以我們就可以進到CD 2024，然後是其中嗎？AG1。2A對吧，我們作為名稱要擺在前面2A。所以我們就可以進來了，對不對？我們想要ssh來動他。OK。所以我們要克隆的部分，我們這邊要有session。好，然後我們現在。近端。這個是近端哦。好，所以我把這個拿出來我們近端沒有任何session。對吧，沒有任何session。表示什麼？假如見了之後啊，它這個會存進我們的。這一臺系統的登錄檔哦其實你非常方便，你3個倉儲都可以同步。你也不怕cost basis上面的這個資源用完你也不怕replit怎麼檔你，反正你還有localhost，而且我們今年每一個人都有一個外部IPV4，就等同有一個伺服器。你即便人不在這裡，你在遠端，只要你防火牆。開它的IP，他就能進來。好，所以這裡面我們現在就是待會我們再來。然後他會跑道software。Simon下面現在還沒設，所以他不會有。這邊你也要。概念就是待會我們設定Session之後，它會跑到software Simon，這個下面我們要帶著走。OK，那其實是有要給那個所以我們就可以。哪裡開始呢？我們從puttty的session開始。OK，所以我打開putty，我們就要連線到github.com了。然後我現在也要把這個session把它存成github.com然後我現在重點是要把剛才的private key那個ppk留給他。OK，那現在的重點是好。你的PPK啊。C槽。OK你你這樣試過得了的。問題是，我給它C槽的。除非這個是我的筆電。C槽所以你只要看的話，我在他session應該是出來了有沒有session，那我打載入看看，然後我看看我的key是不是一樣。在歪對啊，在歪必須在實體的路徑下點兩下，我已經好了，好了，好了要幹嘛，好了我就能夠有權限把他克隆下來好。所以我，我不要再Y了，我就把他切換到c切換到c切換到c要在temp上做，哎，我要把啊這一把他ssh克隆過來，ok，好，那我怎麼怎麼克隆我gitclone，那我不確定他子模組啊，因為應該要把設成他的子模組的名字學好，我們還沒有做這件事，但是我不確定他有沒有子模組，我用ssh，然後我要用ssh，然後我的session叫github. com，然後我的帳號，因為大家都一樣是到cd2024，倉儲是期中報告2a是作業名稱，然後midmid，我們打斑他是第一組，所以意思是說假設我已經有了這個session對應的key，而且我已經open過了有這兩個條件的話，我應該有權限把他抓下來，那既然你用ssh有權限抓下來，我改版之後就一定推的回去就這樣。那我先看看我，我假如我可以ok，哎可以啊，所以我一定推的回去啊，所以這個時候我在進端，我就自由了，我可以啟動動態好，所以這個時候我就進到2a，因為我沒有特別就他2a的midag1就可以進來，然後這裡先，所以我在9443我各自獨立可以編輯自己，我就從https，然後我到localhost，因為現在是localhost，然後是9443，我就可以自己編輯，其他人都不能打擾我對吧？好，那我先改改一個東西，ok，我登錄，哎，這個時候因為是local host，所以我可以很安全地用admin進來，那因為這在隨身碟嗎？好，所以我從這裡我在，哇，糟糕，他怎麼會這樣？我隨身碟可能打擾了，因為我是用隨身碟的可吸程式的，好，所以進來之後，哦，所以他速度沒有非常快，好，所以我把這一個弄進來github.com，然後code basis。這個時候怎麼辦？我，我少一個s，那這個時候，我，我就直接進，所以你看，這個s被掉在外面，好，所以你就可以把這個s把它搬到兩個地方來，一個是搬到連結的show，一個是搬到他的url，然後進來，他就好了，你要的是你要的超文件的，你就可以偶爾，假如這樣的話，你就可以處理，然後我轉，所以我這個時候，我先試試看，我能不能能不能把它推回去，假如可以，我就可以改版，因為我應該有權限，除非他把那個吧掉，好，所以我現在先暫時，關，就是我應該開兩個，我，我告訴他說，那麼，好，所以我commit，我add  code basis，好，我是on code，哎，好，我把它這樣，那假如我要讓我的組員直接連過來要怎麼辦，我當然要先改密碼對吧，那，第二個，我必須要知道我的ip嗎，好，我的ip是我的ipconfig，然後是我ip，我把它ctrl c下來，所以我要讓我這一臺變成是一臺主機，只需要跑到，我現在應該是在c槽，在c camp的這個，我抓init.(發聲者)py出來，這個有沒有，我在這裡，然後我去抓這個檔案來改，然後把他的外部ip丟給他，不再用，好吧，存起來，這個時候在cms，大家都可以動了，ok，然後他會透過防火牆，剛應該有允許他了，到這個9443，大家都能動了，那，因為我沒有要推，做完之後，我就把這個留在這裡，然後你用admin就進來改，沒關係，反正我也不會推，哦，那你就可以試試看，就用這個ip，不再推了&lt;/p&gt;
&lt;h1&gt;並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點&lt;/h1&gt;
&lt;p&gt;這段對話涉及了一系列關於系統登入、私鑰管理、git 克隆、SSH 連接、代碼修改和部署等技術操作。以下是主要的教學重點摘要：&lt;/p&gt;
&lt;p&gt;這段對話涉及了一系列關於系統登入、私鑰管理、git 克隆、SSH 連接、代碼修改和部署等技術操作。以下是主要的教學重點摘要：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;私鑰管理：確保私鑰的安全性和正確性，以便在需要時進行 SSH 連接和身份驗證。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Git 操作：使用 Git 來克隆倉庫、推送修改，並了解子模組的管理方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SSH 連接：使用 SSH 來建立安全的遠程連接，進行代碼操作和部署。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代碼修改：通過本地編輯代碼並將修改推送到遠程存儲庫，確保代碼的同步和版本控制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;防火牆設置：配置防火牆以允許特定 IP 地址訪問遠程服務，保障安全性和訪問控制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IP 地址管理：確保正確的 IP 地址用於遠程訪問和部署服務。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;系統部署：在本地和遠程系統上進行配置和部署，確保服務的正常運行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;團隊協作：確保團隊成員可以安全地訪問和修改代碼，並進行相應的訪問和權限管理。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;這些技術操作可以幫助團隊有效地進行代碼開發、版本控制和部署，保障項目的順利進行和安全性。&lt;/p&gt;</content><category term="w4"></category><category term="教學影片分組整理並自評"></category></entry><entry><title>2024 Spring 課程</title><link href="./2024-Spring-w3.html" rel="alternate"></link><published>2024-03-08T04:54:00+08:00</published><updated>2024-04-12T06:58:11+08:00</updated><author><name>41123101</name></author><id>tag:None,2024-03-08:./2024-Spring-w3.html</id><summary type="html">&lt;p&gt;將組員的個人倉儲納為分組倉儲的子模組,分工處理teams資料&lt;/p&gt;
</summary><content type="html">&lt;p&gt;將組員的個人倉儲納為分組倉儲的子模組,分工處理teams資料&lt;/p&gt;

&lt;h1&gt;將組員的個人倉儲納為分組倉儲的子模組&lt;/h1&gt;
&lt;p&gt;觀看老師blog中的影片，成功將個人倉儲納為分組倉儲的子模組&lt;/p&gt;
&lt;h1&gt;分工處理teams上資料&lt;/h1&gt;
&lt;p&gt;P.1-20  葉承軒
P.21-31 黃育驊
P.32-42 樊明睿
P.43-53 張晏菖
P.54-64 顏崇祐
P.65-75 邱崑展
P.76-87 段勝吉
統整     田芸熏&lt;/p&gt;</content><category term="w3"></category><category term="文章翻譯"></category></entry><entry><title>2024 Spring 課程</title><link href="./2024-Spring-w2.html" rel="alternate"></link><published>2024-03-01T04:54:00+08:00</published><updated>2024-03-29T06:50:11+08:00</updated><author><name>41123101</name></author><id>tag:None,2024-03-01:./2024-Spring-w2.html</id><summary type="html">&lt;p&gt;2024 Spring 組員分組名單&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 組員分組名單&lt;/p&gt;


&lt;h1&gt;組員名單&lt;/h1&gt;
&lt;p&gt;41123124張晏菖(組長)
41123101田芸熏
41123120段勝吉
41123140葉承軒
41123146樊明睿
41123150顏崇祐
41136113邱崑展
41136123林育驊&lt;/p&gt;</content><category term="w2"></category><category term="組員名單"></category></entry><entry><title>2024 Spring 課程</title><link href="./2024-Spring-w1-blog-tutorial.html" rel="alternate"></link><published>2024-02-28T20:42:00+08:00</published><updated>2024-03-29T06:49:50+08:00</updated><author><name>41123101</name></author><id>tag:None,2024-02-28:./2024-Spring-w1-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;內容管理系統2&lt;/h1&gt;
&lt;p&gt;使用者可以自行利用 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; 倉儲作為 Template, 建立自己的網站內容管理系統.&lt;/p&gt;
&lt;p&gt;引用網站網址連結的方法:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 在文章中多次引用同一個網站連結時, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 也可以使用 Markdown 的標準網站連結使用格式.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# 引用 Python 程式的方法
for i in range(10):
    print(i, "列出字串")
&lt;/pre&gt;

&lt;p&gt;也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼.&lt;/p&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="w1"></category><category term="網誌編寫"></category><category term="pelican"></category></entry></feed>